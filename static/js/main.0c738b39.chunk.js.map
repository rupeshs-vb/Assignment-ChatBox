{"version":3,"sources":["components/MsgData.js","components/Listdata.js","components/AddMsg.js","components/Datalist.js","App.js","reportWebVitals.js","index.js"],"names":["MsgData","message","createdAt","sender","_id","Listdata","Msgdata","timeAgo","time","date","Date","seconds","Math","floor","interval","aDay","console","log","now","map","currElement","className","id","AddMsg","addmsg","useState","msgInput","setMsgInput","type","value","onChange","event","target","placeholder","onClick","msgtime","addMsg","alert","Datalist","setMsgdata","msg","newmsg","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c738b39.chunk.js","sourcesContent":["// here it is all my existing pre define data which is hardcoded\r\nlet MsgData = [\r\n    {\r\n      message: \"Hi user\",\r\n      createdAt: \"2021-09-14T13:23:02.298Z\",\r\n      sender: \"agent\",\r\n      _id: 1,\r\n    },\r\n    {\r\n      message: \"How are you doing today\",\r\n      createdAt: \"2021-09-14T13:23:02.298Z\",\r\n      sender: \"user\",\r\n      _id: 2,\r\n    },\r\n    { \r\n      message: \"I am good, how about you\",\r\n      createdAt: \"2021-09-14T13:23:02.298Z\",\r\n      sender: \"agent\",\r\n      _id: 3,\r\n    },\r\n    {\r\n      message: \"I am good, thanks for asking\",\r\n      createdAt: \"2021-09-14T13:23:02.298Z\",\r\n      sender: \"user\",\r\n      _id: 4,\r\n    },\r\n    {\r\n      message: \"How can I help you today ?\",\r\n      createdAt: \"2021-09-14T13:23:02.298Z\",\r\n      sender: \"agent\",\r\n      _id: 5,\r\n    },\r\n  ];\r\nexport default MsgData //here the data is exported","import React from 'react'\r\nconst Listdata = ({Msgdata}) => {\r\n    //this function used for changing time into time ago\r\n    function timeAgo(time) {\r\n        let date=new Date(time);//it change the string into time or date object\r\n        var seconds = Math.floor((new Date() - date) / 1000);\r\n    \r\n        var interval = seconds / 31536000;\r\n    \r\n        if (interval > 1) {\r\n        return Math.floor(interval) + \" years\";\r\n        }\r\n        interval = seconds / 2592000;\r\n        if (interval > 1) {\r\n        return Math.floor(interval) + \" months\"; \r\n        }\r\n        interval = seconds / 86400;\r\n        if (interval > 1) {\r\n        return Math.floor(interval) + \" days\";\r\n        }\r\n        interval = seconds / 3600;\r\n        if (interval > 1) {\r\n        return Math.floor(interval) + \" hours\";\r\n        }\r\n        interval = seconds / 60;\r\n        if (interval > 1) {\r\n        return Math.floor(interval) + \" minutes\";\r\n        }\r\n        return Math.floor(seconds) + \" seconds\";\r\n    }\r\n  var aDay = 24*60*60*1000;\r\n  console.log(timeAgo(new Date(Date.now()-aDay)));\r\n  console.log(timeAgo(new Date(Date.now()-aDay*2)));\r\n \r\n    return (\r\n        <>\r\n            { \r\n            Msgdata.map((currElement)=>{//here mapping is used to fetch the element from array of object \r\n                return(\r\n                    <div key={currElement._id}> \r\n                    {   /*here i used ternary operator.\r\n                            it will check wether the sender is agent or user if \r\n                            it is agent then it send data to the left side of the window and \r\n                            if it is user then it will send data to the right side of the window*/ \r\n                        (currElement.sender===\"agent\") ?\r\n                        //here the agent data stored into leftdata class\r\n                        <div className=\"leftdata\"> \r\n                            <p id=\"agenttag\" >{`${currElement.sender}`}</p>  \r\n                            <p id=\"messagetag\">{`${currElement.message}`}</p>\r\n                            <p id=\"timetag\">{`Send ${timeAgo(currElement.createdAt)} ago`}</p>\r\n                        </div> \r\n                        :\r\n                        //here the user data stored into rightdata class\r\n                        <div className=\"rightdata\">\r\n                            <p id=\"usertag\" >{`${currElement.sender}`}</p>  \r\n                            <p id=\"messagetag\">{`${currElement.message}`}</p>\r\n                            <p id=\"timetag\">{`Send ${timeAgo(currElement.createdAt)} ago`}</p>\r\n                        </div> \r\n                    }\r\n                          \r\n                    </div>\r\n                )\r\n            })}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Listdata\r\n","import React,{ useState } from 'react'\r\n\r\n\r\nconst AddMsg = (addmsg) => {\r\n    \r\n    const [msgInput,setMsgInput]=useState(\"\");\r\n    const submit = ()=>{\r\n\r\n        if(!msgInput)//it check the input is vacant or not before clicking the send button\r\n        {\r\n            alert(\"Please type your message\");//if it is vacant it shows alert in window\r\n        }\r\n        else{\r\n            const msgtime=new Date(); //it is used for fetching the time or date\r\n            addmsg.addMsg(msgInput,msgtime);//it will addMsg() which is declared in Datalist.js file\r\n            setMsgInput(\"\")//is is used to make input vacant after clicking the send button\r\n        }\r\n    }\r\n    return (\r\n        <>  \r\n            <div className=\"input_container\"> \r\n                <input type=\"text\" className=\"input_form\" value={msgInput} onChange={(event)=>{setMsgInput(event.target.value)}} placeholder=\"Enter your message here\"/>\r\n                <button type=\"submit\" onClick={submit}>Send</button>\r\n            </div>\r\n\r\n        </>\r\n        \r\n    )\r\n}\r\nexport default AddMsg","/*here all modules is imported into Datalist then data list gonna imported into app.js\r\n so i can say that dataList is my main components it call all the modules\r\n*/\r\nimport React, {useState} from 'react'\r\nimport MsgData from './MsgData.js'\r\nimport Listdata from './Listdata.js'\r\nimport AddMsg from './AddMsg'\r\nimport './Datalist.css' \r\n\r\n\r\nconst Datalist = () => {\r\n    /*here i declared a function addMsg() which stored data into existing data MsgData\r\n    and it will two arguements msg and time which is passed by file AddMsg.js\r\n    */  \r\n    const addMsg=(msg,msgtime)=>{\r\n    const newmsg={\r\n        message:msg,\r\n        createdAt:msgtime,\r\n        sender:\"user\",\r\n        _id:Msgdata[Msgdata.length-1]._id+1\r\n        }\r\n        setMsgdata([...Msgdata,newmsg]);//it is used for inserting values into existing array at last position\r\n    }\r\n    const [Msgdata,setMsgdata] = useState(MsgData) \r\n    console.log(Msgdata);\r\n    return (\r\n        <>  \r\n            <div className=\"container\">\r\n                {/* here is used main_container to onveert the data into two screens\r\n                first for messages and second for input message */}\r\n                <div className=\"main_container\">\r\n                    <div className=\"addmsg_container\">\r\n                        {/* here the addMsg is passed to AddMasg module  */}\r\n                        <AddMsg addMsg={addMsg}/>\r\n                    </div>\r\n                    <div className=\"message_conatiner\">\r\n                        {/* here Msgdata is passed into Listdata module */}\r\n                        <Listdata Msgdata={Msgdata} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Datalist\r\n","import React from 'react'\nimport Datalist from './components/Datalist'\n\nconst App = () => {\n  return (\n    <>\n      <Datalist/>\n    </>\n  )\n}\n\nexport default App\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}